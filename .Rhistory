test_file("webdata_tests.R"")
f
dfsa
//
dsf/
[df
adsfa
test_file("webdata_tests.R")
source('~/webdata_tests.R')
source('~/webdata_tests.R')
expect_true(c(1,2,3) == c(1,2,3))
expect_true(1 == 1)
source('~/webdata_tests.R')
source('C:/Users/forro15/Code/webdata/webdata.R')
source('~/webdata_tests.R')
source('C:/Users/forro15/Code/webdata/webdata.R')
source('C:/Users/forro15/Code/webdata/webdata.R')
View(data)
source('C:/Users/forro15/Code/webdata/webdata.R')
source('C:/Users/forro15/Code/webdata/webdata.R')
25% + 6.25% + 3.125%
.25 + .0625 + .03125
.80^3
.80^4
1-.4096
source('~/.active-rstudio-document')
NULL * 0
x <- NULL * 0
x
x == 0
x != 0
NULL
NULL * 0
1 - (NULL * 0)
FALSE
FALSE == 0
NAN
NaN
NaN == 0
NA == 0
NA * 0
NaN * 0
2 * FALSE
?...
...
x + ...
2 +
2
z <- 2 3 4 5
z <- c(2,3,4,5)
z
match(2, z)
z <- c(1,0,0,1,0,1,0)
z
match(1,0)
match(1,z)
z == 1
5 * (z == 1)
for (j in (z==1)) {}
for (j in (z==1)) {
print 5*j
for (j in (z==1)) {
print 5*j}
for (j in (z==1)) {
print(5*j)}
NULL + 5
c(.8, .4) %*% c(4, 3)
.8*4
.4 * 3
3.2 + 1.2
4.4 - 5
-.6 * 4
?matrix
source('~/.active-rstudio-document')
X
source('~/.active-rstudio-document')
as.numeric(NULL)
numeric(0)
0
1 - as.numeric(NULL)
1 + as.numeric(NULL)
a + as.numeric(0)
1 + as.numeric(0)
x <- 0 * (1 + NULL)
x
2 + x
numeric(0)
0 == FALSE
1 + FALSE
1 + TRUE
as.numeric(null)
as.numeric(NULL)
2 + as.numeric(NULL)
2 + numeric(NULL)
NA + 2
as.numeric(NA)
2 * NA
as.numeric(2*NA)
2 * as.numeric(NA)
z <- c(-1, 3)
z^2
?abd
?abs
z
abs(z)
?optim
?optim
?binom
?binomial
runif(5, min=0, max=1)
rbinomial
?rbinom
rbinom(5)
rbinom(5, 1)
rbinom(5, 1, .5)
rbinom(5, 1, .5)
rbinom(5, 1, .5)
rbinom(5, 1, .5)
rbinom(5, 1, .5)
rbinom(5, 1, .5)
rbinom(5, 1, .5)
rbinom(5, 1, .5)
rbinom(5, 1, .5)
rbinom(5, 5, .5)
rbinom(5, 1, .5)
rbinom(100, 1, .5)
runif
matrix(rbinom(100,1,.5), nrow=10, ncol=10)
X <- matrix(rbinom(100,1,.5), nrow=10, ncol=10)
theta <- matrix(rbinom(100,1,.5), nrow=10, ncol=10)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
source('~/.active-rstudio-document')
optimize_over_X
y <- matrix(rbinom(100, 1, .5), nrow=10, ncol=10)
optimize_over_X(X, y, theta)
X
X.T
source('~/.active-rstudio-document')
optimize_over_X(X, y, theta)
theta
dim(theta)
dim(X)
optimize_over_X(X, y, theta)
t(X)
X
X %*% t(theta)
source('~/.active-rstudio-document')
optimize_over_X(X, y, theta)
theta <- theta
theta
X %*% t(theta)
optimize_over_X(X, y, theta)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
optimize_over_X(X, y, theta)
?optim
source('C:/Users/forro15/Code/webdata/coll_cost.R')
optimize_over_X(X, y, theta)
X
dim(X)
dim(y)
dim(theta)
(1/2) * sum((x %*% t(theta) - y)^2)
X%*% t(theta)
(1/2) * sum((x %*% t(theta) - y)^2)
(1/2) * sum(((x %*% t(theta)) - y)^2)
(1/2) * sum((x %*% t(theta)))
sum((x %*% t(theta)))
(x %*% t(theta))
x %*% t(theta)
(1/2) * sum((X %*% t(theta) - y)^2)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
optimize_over_X(X, y, theta)
X
optim(X, fn=coll_cost, theta=theta, y=y)
coll_cost(X, y, theta)
coll_cost(X, y, theta)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
coll_cost(X, y, theta)
optim(X, fn=coll_cost, theta=theta, y=y)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
optim(X, fn=coll_cost, theta=theta, y=y)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
optim(X, fn=coll_cost, theta=theta, y=y)
X %*% t(theta)
X %*% t(theta)
coll_cost(X, y, theta, lambda=.1)
optim(X, fn=coll_cost, theta=theta, y=y)
optim(X, fn=coll_cost, theta=theta, y=y)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
optim(X, fn=coll_cost, theta=theta, y=y)
optim(X, fn=coll_cost, y=y, theta=theta)
t(theta)
X %*% t(theta)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
multiply_matrices(rbinom(100, 1, .5), rbinom(100, 1, .5))
optim(X, fn=coll_cost, y=y, theta=theta)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
optim(X, fn=coll_cost, y=y, theta=theta)
optim(X, fn=coll_cost, y=y, theta=theta)
coll_cost(X, y, theta)
cost_grad_x(X, y, y, theta)
cost_grad_x(X, y, r, theta)
r <- matrix(rbinom(100, 1, .5),10,10)
r
cost_grad_x(X, y, r, theta)
y
source('C:/Users/forro15/Code/webdata/coll_cost.R')
cost_grad_x(X, y, r, theta)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
cost_grad_x(X, y, r, theta)
z<-c(1,2,3)
dim(z)
length(z)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
cost_grad_x(X, y, r, theta)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
cost_grad_x(X, y, r, theta)
X[i,] %*% t(theta)[,j]
X[1,] %*% t(theta)[,1]
X[1,] %*% t(theta)[,1] - y[i,j]
X[1,] %*% t(theta)[,1] - y[1,1]
(X[1,] %*% t(theta)[,1] - y[1,1])*theta[1,1]
debugSource('C:/Users/forro15/Code/webdata/coll_cost.R')
cost_grad_x(X, y, r, theta)
dim(X)
dim(t(theta))
dim(X[1,])
length(X[1,])
length(t(theta)[,1])
X[1,] %*% t(theta)[,1]
debugSource('C:/Users/forro15/Code/webdata/coll_cost.R')
cost_grad_x(X, y, r, theta)
debugSource('C:/Users/forro15/Code/webdata/coll_cost.R')
cost_grad_x(X, y, r, theta)
debugSource('C:/Users/forro15/Code/webdata/coll_cost.R')
cost_grad_x(X, y, r, theta)
X[1,] %*% t(theta[,2])
debugSource('C:/Users/forro15/Code/webdata/coll_cost.R')
debugSource('C:/Users/forro15/Code/webdata/coll_cost.R')
cost_grad_x(X, y, r, theta)
t(theta)[1,]
debugSource('C:/Users/forro15/Code/webdata/coll_cost.R')
debugSource('C:/Users/forro15/Code/webdata/coll_cost.R')
cost_grad_x(X, y, r, theta)
debugSource('C:/Users/forro15/Code/webdata/coll_cost.R')
cost_grad_x(X, y, r, theta)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
source('C:/Users/forro15/Code/webdata/coll_cost.R')
cost_grad_x(X, y, r, theta)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
cost_grad_x(X, y, r, theta)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
cost_grad_x(X, y, r, theta)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
cost_grad_x(X, y, r, theta)
optmize_over_X(X, y, theta)
optimize_over_X(X, y, theta)
optmize_over_X(X, y, theta)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
optmize_over_X(X, y, theta)
optimize_over_X(X, y, theta)
debugSource('C:/Users/forro15/Code/webdata/coll_cost.R')
optimize_over_X(X, y, theta)
debugSource('C:/Users/forro15/Code/webdata/coll_cost.R')
optimize_over_X(X, y, theta)
debugSource('C:/Users/forro15/Code/webdata/coll_cost.R')
optimize_over_X(X, y, theta)
optimize_over_X(X, y, theta)
debugSource('C:/Users/forro15/Code/webdata/coll_cost.R')
optimize_over_X(X, y, theta)
optimize_over_X(X, y, theta)
X %*% theta
X %*% t(theta)
X %*% t(theta) - y
(X %*% t(theta) - y)^2
(X %*% t(theta) - y)^2
debugSource('C:/Users/forro15/Code/webdata/coll_cost.R')
optimize_over_X(X, y, theta)
optim(X, coll_cost, y=y, theta=theta)
X
t(theta)
X <- runif(10)
X
optim(X, coll_cost, y=y, theta=theta)
debugSource('C:/Users/forro15/Code/webdata/coll_cost.R')
optim(X, coll_cost, y=y, theta=theta)
dim(theta)
dim(X)
length(X)
theta %*% X
theta %*% X - y
y
y[1,]
y <- y[1,]
optim(X, coll_cost, y=y, theta=theta)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
optim(X, coll_cost, y=y, theta=theta)
source('~/.active-rstudio-document')
optim(X, coll_cost, y=y, theta=theta)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
optim(X, coll_cost, y=y, theta=theta)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
X <- matrix(rbinom(100, 1, .5), 10, 10)
y
y <- matrix(rbinom(100, 1, .5), 10, 10)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
optim(X, coll_cost, y=y, theta=theta)
X
optimize_over_X(X, y, theta)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
optimize_over_X(X, y, theta)
dim(X_vals)[1]
dim(X)[1]
source('C:/Users/forro15/Code/webdata/coll_cost.R')
optimize_over_X(X, y, theta)
dim(new_X)
new_X <- optimize_over_X(X, y, theta)
dim(new_X)
source('C:/Users/forro15/Code/webdata/coll_cost.R')
source('~/.active-rstudio-document')
new_X <- optimize_over_X(X, y, theta)
new_X
source('C:/Users/forro15/Code/webdata/coll_cost.R')
new_X_2 <- optimize_over_X(X, y, theta)
a <- dim(X)
matrix(100, a)
matrix(100, a[1])
matrix(100, a[1], a[2])
source('C:/Users/forro15/Code/webdata/coll_cost.R')
new_X_2 <- optimize_over_X(X, y, theta)
qnorm(.10)
75*1.28
1100-96
(75^2)/144
(75^2)/143
1.28*39.06
1100-49.9968
(75^2)/sqrt(144)
75/sqrt(144)
75/sqrt(143)
-1.28*6.25
1100-8
.5^3*(.5^3)
.5^4(.5^6)
.5^4*(.5^6)
qnorm(.975)
rpois(20)
qpois(20)
?qpois
qpois(20, 1)
qpois(1, 1)
qpois(1.1, 1)
qpois(2, 1)
qpois(.95, 1)
ppois(3,1)
qpois(.98, 1)
(1 - 3.5) + (2 - 3.5) + (3 - 3.5) + (4 - 3.5) + (5 - 3.5) + (6 - 3.5)
((1 - 3.5) + (2 - 3.5) + (3 - 3.5) + (4 - 3.5) + (5 - 3.5) + (6 - 3.5))^2
(1 - 3.5)^2 + (2 - 3.5)^2 + (3 - 3.5)^2 + (4 - 3.5)^2 + (5 - 3.5)^2 + (6 - 3.5)^2
/5
((1 - 3.5)^2 + (2 - 3.5)^2 + (3 - 3.5)^2 + (4 - 3.5)^2 + (5 - 3.5)^2 + (6 - 3.5)^2)/5
((1 - 3.5)^2 + (2 - 3.5)^2 + (3 - 3.5)^2 + (4 - 3.5)^2 + (5 - 3.5)^2 + (6 - 3.5)^2)/6
var(1,2,3,4,5,6)
var(c(1,2,3,4,5,6)
)
?var
mean(1:6)
var(c(1:6, 3.5))
39 * 4
2 * 9
9.7 * 3.4
(1/8 + 1/21)^1/2
(1/8 + 1/21)^1/2 * 307.8
(1/8 + 1/21)^1/2 * 307.8 * 2.052
(132.86 - 127.44)
(1/8 + 1/21)^1/2 * 307.8 * 2.052
(132.86 - 127.44) - 54.51358
(132.86 - 127.44) - 2.052(307.8*(1/8 + 1/21)^1/2))
(132.86 - 127.44) - 2.052(307.8*(1/8 + 1/21)^1/2)
(132.86 - 127.44) - 2.052*(307.8*(1/8 + 1/21)^1/2)
(132.86 - 127.44) - 2.052*(307.8*(1/8 + 121)^1/2)
(132.86 - 127.44) - 2.052*(307.8*((1/8 + 121)^1/2))
(132.86 - 127.44) - 2.052*(307.8*((1/8 + (1/21))^1/2))
2^2
2^1/2
2**(1/2)
2^(1/2)
(132.86 - 127.44) - 2.052*(307.8*((1/8 + (1/21))^(1/2)))
(132.86 - 127.44) - 2.052*(307.8*((1/8 + 1/21)^(1/2)))
(132.86 - 127.44) - 2.052*(307.8*(1/8 + 1/21)^(1/2))
(132.86 - 127.44) + 2.052*(307.8*(1/8 + 1/21)^(1/2))
(132.86 - 127.44) + 2.052*(307.8*(1/8 + 121)^(1/2))
132.86-127.44
(1/8 + 1/21)
(1/8 + 1/21)^(1/2)
(1/8 + 1/21)^(1/2) * 307.8
sqrt(4)
sqrt((1/8 + 1/21))
sqrt((1/8 + 1/21))*307.8
sqrt((1/8 + 1/21))*307.8*2.52
(132.86 - 127.44) + 2.052*(307.8*(1/8 + 1/21))^(1/2)
(132.86 - 127.44) - 2.052*(307.8*(1/8 + 1/21))^(1/2)
qt(.95)
qt(.95, 14)
qt(.975, 14)
(63+175)/14
sqrt(17)
sqrt(1/4)
.5 * 2.145
2 - 1.0725
2 + 1.0725
?rexp
expnos <- rexp(1000)
?runi
?runif
unifnos <- runif(1000)
qnums <- 1:100
expquantiles <- qexp(qnums)
qexp
?qexp
qexp(1)
qexp(2)
qnums <- seq(0:1, .1)
?seq
qnums <- seq(0, 1, .1)
qnums
qnums <- seq(0, 1, .01)
qnums
expquantiles <- qexp(qnums)
expquantiles
qqplot
?qqplot
qqplot(expquantiles)
unifquantiles <- qunif(qnums)
qqplot(expquantiles, unifquantiles)
qqplot(unifquantiles, expquantiles)
myfunc <- function(x) {1 - exp(-x)}
plot(-20:20, myfunc)
plot(-20:20, myfunc(-20,20))
plot(-20:20, myfunc(-20:20))
qqplot(unifquantiles, expquantiles)
myfunc <- function(x) {-log(1-x)}
plot(0:1, myfunc(0:1))
plot(seq(0,1,.01), myfunc(seq(0,1,.01)))
qqplot(unifquantiles, expquantiles)
?qqplot
sqrt(14)
qt(.975, 8)
30/3
2.3*10
1100 - 23
1100 + 23
qt(.975,8)
2.3*3
2/6.9
6/2.3
sqrt(.49)
.16/10
qt(.975, 18)
2.10 * .016
2 - .0336
2 + .0336
-2 - .0336
-2 + .0336
sqrt(.2)
.4472 * .8
qt(.975, 18)
2.1 * .35776
-2 + .751296
-2 - .761296
log(-exp(-x))
log(-exp(-1))
log(-exp(-1))
log(-exp(1))
xs <- rexp(1000)
xs
xs <- seq(0, 100, .01)
xsmod <- 4*xs + 3
sqrt(900)
qt(8, .975)
qt(.975, 8)
1100-23
1100 + 23
[X, y] <- load_data()
all <- load_data()
setwd("C:/Users/forro15/Code/rpyml/data")
all <- load_data()
all <- read_data()
getwd()
cd ..
setwd("C:/Users/forro15/Code/rpyml")
all <- read_data()
source('C:/Users/forro15/Code/rpyml/read_data.R')
all <- read_data()
all <- load_data()
source('C:/Users/forro15/Code/rpyml/read_data.R')
all <- load_data()
all[[1]]
X <- all[[1]]
y <- all[[2]]
source('C:/Users/forro15/Code/rpyml/plot_lwlr.R')
plot_lwlr(X, y, tau=.01, rep=200)
plot_lwlr(X, y, tau=.01, res=200)
plot_lwlr()
plot_lwlr(X, y, tau=.01, res=50)
source('C:/Users/forro15/Code/rpyml/lwlr.R')
source('C:/Users/forro15/Code/rpyml/plot_lwlr.R')
plot_lwlr(X, y, tau=.01, res=50)
plot_lwlr(X, y, tau=.01, res=200)
?plot
source('C:/Users/forro15/Code/rpyml/plot_lwlr.R')
plot_lwlr(X, y, tau=.01, res=200)
